name: Main Checks
on: [push, pull_request]
jobs:
  TFLint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v1
        with:
          tflint_version: v0.28.0  # Must be specified. See: https://github.com/terraform-linters/tflint/releases for latest versions
      - name: Run TFLint
        # info level there because of WARNs and ERRs seen occasionally only in GitHub actions logs
        run: find ${{ github.workspace }} | grep tf$ | xargs -n1 dirname | xargs -IXXX -n1 /bin/sh -c 'set -o errexit; cd XXX; pwd; tflint --loglevel=info .; cd - >/dev/null'
  TFValidate:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v1
        with:
          tflint_version: v0.28.0  # Must be specified. See: https://github.com/terraform-linters/tflint/releases for latest versions
      - name: Run terraform validate
        env:
          CI_USE_TF_CLOUD: ${{ secrets.CI_USE_TF_CLOUD }}
          TERRAFORM_CLOUD_LOGIN_TOKEN: ${{ secrets.TERRAFORM_CLOUD_LOGIN_TOKEN }}
        run: ${{ github.workspace }}/bin/check_validate.sh
  Checks:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Run Check Format
        run: ${{ github.workspace }}/bin/check_format.sh
      - name: Run Check Index
        run: ${{ github.workspace }}/bin/check_index.sh
      - name: Run Check Scripts
        run: ${{ github.workspace }}/bin/check_scripts.sh
      - name: Run Check Shell Scripts
        run: ${{ github.workspace }}/bin/check_shell.sh
      - name: Run Check Names
        run: ${{ github.workspace }}/bin/check_non_unique_data.sh && ${{ github.workspace }}/bin/check_non_unique_resources.sh && ${{ github.workspace }}/bin/check_non_unique_variable.sh
  ProvidersAWS:
    concurrency: provider_test_aws
    needs: [TFLint, TFValidate, Checks]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v1
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      - name: Run AWS examples
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          CI_USE_TF_CLOUD: true
          TERRAFORM_CLOUD_LOGIN_TOKEN: ${{ secrets.TERRAFORM_CLOUD_LOGIN_TOKEN }}
        if: github.ref == 'refs/heads/main' || env.GITHUB_REF_SLUG == 'integration' # Only run on main/integration, as these take a long time
        run: ${{ github.workspace }}/bin/run_aws_examples.sh
  ProvidersGCP:
    concurrency: provider_test_gcp
    needs: [TFLint, TFValidate, Checks]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v1
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      - name: Run GCP examples
        env:
          CI_USE_TF_CLOUD: ${{ secrets.CI_USE_TF_CLOUD }}
          TERRAFORM_CLOUD_LOGIN_TOKEN: ${{ secrets.TERRAFORM_CLOUD_LOGIN_TOKEN }}
          GCP_CREDENTIALS_FILE: ${{ secrets.GCP_CREDENTIALS_FILE }}
          GCP_CREDENTIALS_FILENAME: ${{ secrets.GCP_CREDENTIALS_FILENAME }}
          TF_VAR_project_id: ${{ secrets.GCP_PROJECT }}
        if: github.ref == 'refs/heads/main' || env.GITHUB_REF_SLUG == 'integration' # Only run on main/integration, as these take a long time
        run: GOOGLE_APPLICATION_CREDENTIALS=$GCP_CREDENTIALS_FILENAME ${{github.workspace}}/bin/run_gcp_examples.sh
  ProvidersLocal:
    concurrency: provider_test_local
    needs: [TFLint, TFValidate, Checks]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v1
      - name: Run Local Examples
        if: github.ref == 'refs/heads/main' || env.GITHUB_REF_SLUG == 'integration' # Only run on main/integration, as these take a long time
        run: ${{github.workspace}}/bin/run_local_examples.sh
