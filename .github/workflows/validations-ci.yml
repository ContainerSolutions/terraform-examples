name: Main Pull Request
on: [push, pull_request]
env:
  terraform_version: latest
  tflint_version: latest
jobs:
  TFLint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0   # Need whole history, or at least far enough back to get .test_log.log reference
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v1
        with:
          tflint_version: ${{ env.tflint_version }} # Must be specified. See: https://github.com/terraform-linters/tflint/releases for latest versions
      - name: Run TFLint
        # info level there because of WARNs and ERRs seen occasionally only in GitHub actions logs
        run: find ${{ github.workspace }} | grep tf$ | xargs -n1 dirname | xargs -IXXX -n1 /bin/sh -c 'set -o errexit; cd XXX; pwd; tflint --loglevel=info .; cd - >/dev/null'
  TFValidate:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0   # Need whole history, or at least far enough back to get .test_log.log reference
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.terraform_version }}
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TERRAFORM_CLOUD_LOGIN_TOKEN }}
      - name: Generate SSH key
        run: |
          mkdir -p ~/.ssh/
          chmod 700 ~/.ssh/
          ssh-keygen -q -N '' -f ~/.ssh/id_rsa
      - name: Run terraform validate
        env:
          CI_USE_TF_CLOUD: ${{ secrets.CI_USE_TF_CLOUD }}
          TERRAFORM_CLOUD_LOGIN_TOKEN: ${{ secrets.TERRAFORM_CLOUD_LOGIN_TOKEN }}
        run: ${{ github.workspace }}/bin/check_validate.sh
  Checks:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.terraform_version }}
          terraform_wrapper: false
      - name: Run Check Format
        run: ${{ github.workspace }}/bin/check_format.sh
      # - name: Run Check Index
      #   run: ${{ github.workspace }}/bin/check_index.sh
      - name: Run Check Scripts
        run: ${{ github.workspace }}/bin/check_scripts.sh
      - name: Run Check Shell Scripts
        run: ${{ github.workspace }}/bin/check_shell.sh
      - name: Run Check Names
        run: ${{ github.workspace }}/bin/check_non_unique_data.sh && ${{ github.workspace }}/bin/check_non_unique_resources.sh && ${{ github.workspace }}/bin/check_non_unique_variable.sh